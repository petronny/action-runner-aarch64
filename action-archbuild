#!/bin/zsh
set -e

zparseopts \
	-use-workflow:=workflow_id \
	-runner:=runner

config_file=$(realpath $0)
config_file=$(dirname $config_file)/config.yaml

export TOKEN=$(yq '.token' $config_file | jq -r '.')
export http_proxy=$(yq '.http_proxy' $config_file | jq -r '.')
export https_proxy=$(yq '.https_proxy' $config_file | jq -r '.')
repo=$(yq ".runner.\"$(basename $0)\"" $config_file | jq -r '.')
artifacts_repo=$(yq ".repo.artifacts" $config_file | jq -r '.')

[ "$http_proxy" = "null" ] && unset http_proxy
[ "$https_proxy" = "null" ] && unset https_proxy
[ -n "$runner" ] && repo=${runner[2]}
[ "$repo" = "null" ] && echo "No runner specific." >>/dev/stderr && exit 1
workflow_id=${workflow_id[2]}

package=$(realpath .)
package=$(basename $package)
uuid=$(uuidgen)

if [ -z "$workflow_id" ]
then
	curl -sS -X POST https://api.github.com/repos/${repo}/dispatches \
		-H "Accept: application/vnd.github.everest-preview+json" \
		-H "Authorization: token $TOKEN" \
		--data "{\"event_type\": \"$package $uuid\"}"

	while true
	do
		sleep 30
		download-file-from-artifact.zsh \
			--repo ${repo} \
			--file $package.$uuid \
			--type file \
			--save-path /tmp || continue
		break
	done

	workflow_id=$(cat /tmp/$package.$uuid)
fi

download-file-from-artifact.zsh \
	--repo ${repo} \
	--workflow $workflow_id \
	--file $package.log \
	--type file \
	--save-path /tmp \
	--save-json /tmp/$package.$uuid.artifacts.json || (echo "Error:\tDownload $package.log failed" >> /dev/stderr && exit 1)

cat /tmp/$package.log >> /dev/stderr
rm /tmp/$package.log

download-file-from-artifact.zsh \
	--repo ${repo} \
	--workflow $workflow_id \
	--file $package.patch \
	--type file \
	--save-path /tmp || (echo "Error:\tDownload $package.patch failed" >> /dev/stderr)

if [ -f /tmp/$package.patch ]
then
	for i in $(git status -s | grep " M" | cut -c 4-)
	do
		git checkout -- $i
	done

	for i in $(git status -s | grep "^A" | cut -c 4-)
	do
		rm $i
	done

	git apply /tmp/$package.patch
	rm /tmp/$package.patch
fi

download-file-from-artifact.zsh \
	--repo ${repo} \
	--workflow $workflow_id \
	--file $package \
	--type package \
	--save-path . || (echo "Error:\tDownload $package failed" && exit 1)

if [ -n "$artifacts_repo" ]
then
	cd "$artifacts_repo"
	cp /tmp/$package.$uuid.artifacts.json $package.json
	git add $package.json
	git commit -m "[${repo}] uploaded artifacts for $package" -m "https://github.com/$repo/actions/runs/$workflow_id"
	while true
	do
		git push origin master && break || git pull --rebase origin master
		sleep $(($RANDOM%10/10.0))
	done
fi

rm -f /tmp/$package.$uuid*
